// Code generated by running "go generate" in golang.org/x/text. DO NOT EDIT.

package translations

import (
	"golang.org/x/text/language"
	"golang.org/x/text/message"
	"golang.org/x/text/message/catalog"
)

type dictionary struct {
	index []uint32
	data  string
}

func (d *dictionary) Lookup(key string) (data string, ok bool) {
	p, ok := messageKeyToIndex[key]
	if !ok {
		return "", false
	}
	start, end := d.index[p], d.index[p+1]
	if start == end {
		return "", false
	}
	return d.data[start:end], true
}

func init() {
	dict := map[string]catalog.Dictionary{
		"en": &dictionary{index: enIndex, data: enData},
		"ko": &dictionary{index: koIndex, data: koData},
		"zh": &dictionary{index: zhIndex, data: zhData},
	}
	fallback := language.MustParse("en-GB")
	cat, err := catalog.NewFromMap(dict, catalog.Fallback(fallback))
	if err != nil {
		panic(err)
	}
	message.DefaultCatalog = cat
}

var messageKeyToIndex = map[string]int{
	"Hello %s!\n": 1,
	"Welcome!\n":  0,
}

var enIndex = []uint32{ // 3 elements
	0x00000000, 0x0000000e, 0x00000020,
} // Size: 36 bytes

const enData string = "\x04\x00\x01\n\t\x02Welcome!\x04\x00\x01\n\r\x02Hello %[1]s!"

var koIndex = []uint32{ // 3 elements
	0x00000000, 0x0000000d, 0x00000029,
} // Size: 36 bytes

const koData string = "" + // Size: 41 bytes
	"\x04\x00\x01\x0a\x08\x02환영!\x04\x00\x01\x0a\x17\x02안녕하세요 %[1]s!"

var zhIndex = []uint32{ // 3 elements
	0x00000000, 0x00000015, 0x0000002a,
} // Size: 36 bytes

const zhData string = "" + // Size: 42 bytes
	"\x04\x00\x01\x0a\x10\x02欢迎到来！\x04\x00\x01\x0a\x10\x02你好，%[1]s!"

	// Total table size 223 bytes (0KiB); checksum: DB716DB1
